{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","Proptypes","func","isRequired","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"0NAEaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,aAuBhCZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,YC7BrBC,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OAFAC,QAAQC,IAAK,CAACJ,KAAIC,QAAOC,QAIrB,cADA,CACA,OAAKG,UAAU,yCAAf,UAEI,qBAAKC,IAAMJ,EAAMK,IAAMN,IACvB,kCAAMA,EAAN,W,uBCTCO,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbR,EAFa,iDAEoCS,UAAWF,GAF/C,+DAGAG,MAAOV,GAHP,cAGbW,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAVvB,kBAcZc,GAdY,4CAAH,sDCEPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0B3B,mBAAS,CAC/BiC,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEPjB,EAASC,GACRiB,MAAM,SAAAC,GAECH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAACb,IAEGc,EDjB0BK,CAAcnB,GAAlCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIjB,UAAU,mCAAd,SAAmDI,IAEjDa,GAAW,wCAEX,qBAAKjB,UAAU,YAAf,SAEMc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIlB,aEd3B6B,EAAe,WAExB,IACA,EAAoC/C,mBADf,CAAC,cACtB,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEJ,6BAEQiD,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCnB9BsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.79d6f9a0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Proptypes from 'prop-types'\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setinputValue] = useState(''); // ''\r\n    \r\n    const handleInputChange = (e) => {\r\n        setinputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: Proptypes.func.isRequired\r\n}\r\n\r\n// <h1> { inputValue } </h1>","import React from 'react';\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    \r\n    console.log( {id, title, url} )\r\n    \r\n    return (\r\n        // className es class en css\r\n        <div className=\"card animate__animated animate__fadeIn\"> \r\n         \r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n         \r\n        </div>\r\n        \r\n    )\r\n}","\r\n\r\nexport const getGifs = async ( category ) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Wew3e3Md5XhqU9hABlXunlANRIi7tXNS`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flash\">{ category }</h3>\r\n\r\n            { loading && <p>Loading</p> }\r\n            \r\n              <div className=\"card-grid\">\r\n              {   \r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key =  {img.id }    \r\n                            { ...img }\r\n                        />\r\n                    ))\r\n              }\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => { \r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n        .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                }); \r\n\r\n        })\r\n    }, [category]);\r\n\r\n    return state; // {data:[], loading: true}\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const initialState = ['One Punch'];\r\n    const [categories, setCategories] = useState(initialState);\r\n\r\n    //const handleAdd = () => {\r\n        // setCategories( [...categories, 'HunterXHunter'] );\r\n      //  setCategories( cats => [ ...cats, 'HunterXHunter' ] );\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n        \r\n        <ol>\r\n            {\r\n                categories.map( category => ( \r\n                    <GifGrid \r\n                        key={ category }\r\n                        category={ category } \r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n// export default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}